{"version":3,"sources":["[absolute-resource-path]"],"names":["params","v","key","props","addTimeClick","bind","subTimeClick","updateTimeScale","togglePlaying","toggleRepeaed","toStart","onSlide","asd","state","emulationId","url","query","id","emulation","nodesLoading","timeScale","isPlaying","repeated","player","slider","min","max","step","value","blocks","list","block","adoptions","providers","maxLocalDiff","setState","Math","round","clearInterval","setInterval","axios","get","res","console","log","firstTimestamp","parseFloat","data","adopted","lastTimestamp","length","diff","height","filter","item","localDiff","push","iterations","status","markers","index","maxHeight","i","nodeId","map","city","lat","lng","provider","gHeightData","role","gLineData","blocksQty","row","__html","paddingBottom","marginRight","marginLeft","onMapCreated","title","bar","groupWidth","chartArea","width","legend","position","animation","duration","easing","vAxis","minValue","nodesQty","hAxis","React","Component"],"mappings":"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","file":"5.d4c39e3d6abed6561224.hot-update.js","sourcesContent":["import Layout from '../components/MyLayout.js'\nimport Header from '../components/Header.js'\nimport Link from 'next/link'\nimport axios from 'axios';\n\nimport { Gmaps, Marker, InfoWindow, Circle } from 'react-gmaps';\nimport { Grid, Row, Col, Alert, ButtonGroup, Button, MenuItem, DropdownButton, Glyphicon } from 'react-bootstrap';\nimport Slider from 'react-rangeslider';\nimport stylesheet from 'react-rangeslider/lib/index.css'\n// import stylesheet from 'rc-slider/assets/index.css';\n\nimport { Chart } from 'react-google-charts';\n\n\nconst params = {v: '3.exp', key: 'AIzaSyDr2YFdzTVM5JJsaYcFcuXpc4uJBaIcktk'};\n\nexport default class extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.toggleModal = this.toggleModal.bind(this);\n    // this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.addTimeClick = this.addTimeClick.bind(this);\n    this.subTimeClick = this.subTimeClick.bind(this);\n    this.updateTimeScale = this.updateTimeScale.bind(this)\n\n    this.togglePlaying = this.togglePlaying.bind(this);\n    // this.startPlaying = this.startPlaying.bind(this);\n    // this.stopPlaying = this.stopPlaying.bind(this);\n    this.toggleRepeaed = this.toggleRepeaed.bind(this);\n    this.toStart = this.toStart.bind(this);\n\n    this.onSlide = this.onSlide.bind(this);\n    this.asd = this.asd.bind(this);\n\n    this.state = {\n      emulationId: props.url.query.id,\n      emulation: false,\n      nodesLoading: false,\n      timeScale: 100,\n      isPlaying: false,\n      repeated: false,\n      player: false,\n      slider: {\n        min: false,\n        max: false,\n        step: false,\n        value: 0,\n      },\n      blocks: {\n        list: false\n      },\n      block: false,\n      adoptions: {\n        list: false,\n      },\n      providers: false,\n      maxLocalDiff: false,\n    };\n  }\n\n  onSlide(value) {\n    this.setState({\n      slider: {\n        min: this.state.slider.min,\n        max: this.state.slider.max,\n        step: this.state.slider.step,\n        value: value\n      }\n    })\n  }\n\n  asd(value) {\n    return(\n      <p>+{Math.round(value-this.state.slider.min)} ms</p>\n    )\n  }\n\n  // onMarkerClick(blockId) {    \n  //   for (let i = 0; i < this.state.blocks.list.length; i += 1) {\n  //     if (this.state.blocks.list[i].block.id === blockId) {\n  //       // console.log(this.state.blocks.list[i].block);\n  //       this.setState({\n  //         block: this.state.blocks.list[i].block\n  //       })\n  //       break;\n  //     }\n  //   }\n  // }\n\n\n  updateTimeScale(value){\n    this.setState({\n      timeScale: value\n    })\n  }\n\n\n  addTimeClick() {    \n    this.setState({\n      slider: {\n        min: this.state.slider.min,\n        max: this.state.slider.max,\n        step: this.state.slider.step,\n        value: this.state.slider.value + this.state.timeScale\n      }\n    })\n  }\n\n  togglePlaying() {\n    this.setState({\n      isPlaying: !this.state.isPlaying\n    })\n\n\n    if (this.state.player) {\n      clearInterval(this.state.player)\n      this.setState({\n        player: false\n      })\n    } else{\n      const player = setInterval(() => {\n        \n        if (this.state.slider.value >= this.state.slider.max) {     \n          if (this.state.repeated === true) {\n            this.setState({\n              slider: {\n                min: this.state.slider.min,\n                max: this.state.slider.max,\n                step: this.state.slider.step,\n                value: this.state.slider.min\n              }\n            })\n          } else {\n            clearInterval(this.state.player)\n            this.setState({\n              player: false,\n              isPlaying: false\n            })\n          }\n        }\n\n        this.setState({\n          slider: {\n            min: this.state.slider.min,\n            max: this.state.slider.max,\n            step: this.state.slider.step,\n            value: this.state.slider.value + this.state.slider.step/2\n          }\n        })\n        \n      }, 100)\n\n      this.setState({\n        player: player\n      })\n    }\n    \n  }\n\n  toggleRepeaed() {\n    this.setState({\n      repeated: !this.state.repeated\n    })\n  }\n\n  toStart() {\n    this.setState({\n      slider: {\n        min: this.state.slider.min,\n        max: this.state.slider.max,\n        step: this.state.slider.step,\n        value: this.state.slider.min\n      }\n    })\n  }\n\n  subTimeClick() {\n    this.setState({\n      slider: {\n        min: this.state.slider.min,\n        max: this.state.slider.max,\n        step: this.state.slider.step,\n        value: this.state.slider.value - this.state.timeScale\n      }\n    })\n  }\n\n\n  async componentDidMount() {\n    this.setState({nodesLoading: true});\n    const res = await axios.get(`http://127.0.0.1:7500/api/v1.0/emulations/${this.state.emulationId}`);\n    console.log(res);\n\n    const firstTimestamp = parseFloat(res.data.blocks[0].block.adopted);\n    const lastTimestamp = parseFloat(res.data.blocks[res.data.blocks.length-1].block.adopted);\n    const diff = lastTimestamp - firstTimestamp;\n\n    let maxLocalDiff = 0;\n    let adoptions = [];\n    for (let height = 0; height < res.data.emulation.iterations; height += 1) {\n      const blocks = res.data.blocks.filter((item) => item.block.height === height);\n      const localDiff = blocks[blocks.length - 1].block.adopted - blocks[0].block.adopted;      \n      maxLocalDiff = localDiff > maxLocalDiff ? localDiff : maxLocalDiff;\n      adoptions.push(blocks[0]);\n    }\n\n    console.log('adoptions', adoptions);\n    \n\n    this.setState({ \n      nodesLoading: false,\n      emulation: res.data.emulation,\n      providers: res.data.providers,\n      slider: {\n        min: firstTimestamp,\n        max: lastTimestamp,\n        step: diff/100,\n        value: firstTimestamp,\n      },\n      maxLocalDiff: maxLocalDiff,\n      adoptions: {\n        list: adoptions\n      },\n      blocks: {\n        list: res.status === 204 ? [] : res.data.blocks\n      }\n    });\n  }\n\n\n  render() {\n    const markers = this.state.blocks.list === false ? null :\n      this.state.blocks.list\n        .filter((item) => item.block.adopted <= this.state.slider.value)\n        .filter((item, index) => {\n          let maxHeight = -1;\n          \n          for(let i = 0; i < this.state.blocks.list.length; i += 1){\n            if (\n              this.state.blocks.list[i].block.nodeId === item.block.nodeId && \n              this.state.blocks.list[i].block.adopted <= this.state.slider.value\n            ) {\n              maxHeight += 1;\n            }\n          }\n\n          return item.block.height === maxHeight;\n        })\n        .map((item, index) => (\n          <Marker\n            key={`marker_${index}`}\n            lat={item.city.lat}\n            lng={item.city.lng}\n            draggable={false}\n            content={'Hello, React :)'}\n            icon={item.block.provider === item.block.nodeId ?\n              'http://chart.apis.google.com/chart?chst=d_map_xpin_letter&chld=pin_star|' + item.block.height + '|' + this.state.providers[item.block.provider][item.block.height] + '|000|FF0' : \n              'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + item.block.height + '|' + this.state.providers[item.block.provider][item.block.height]\n            }\n          />\n      )\n    )\n    \n    // const LineChart = require(\"react-chartjs\").Line;\n    \n\n    // let minZeroHeightAdopted = 0;\n    // let maxZeroHeightAdopted = 0;\n    // let zeroData = [];\n\n    // let heightData = this.state.emulation ? Array(this.state.emulation.iterations).fill(0): null\n    // this.state.blocks.list ? \n    //   this.state.blocks.list\n    //     .filter((item) => item.block.height === 0)\n    //     .map((item, index) => {\n    //       if (index === 0) {\n    //         minZeroHeightAdopted = item.block.adopted;\n    //       }\n    //       minZeroHeightAdopted = minZeroHeightAdopted < item.block.adopted ? minZeroHeightAdopted : item.block.adopted;\n    //       maxZeroHeightAdopted = minZeroHeightAdopted > item.block.adopted ? minZeroHeightAdopted : item.block.adopted;\n          \n    // }) : null\n\n    // const diff = maxZeroHeightAdopted-minZeroHeightAdopted;\n    \n    \n    // if (this.state.blocks.list) {\n    //   let blocksQty = 0;\n    //   for (let i = 0; i < (diff/10)+4; i += 1) {\n    //     this.state.blocks.list\n    //       .filter((item) => item.block.height === 0)\n    //       .filter((item) => item.block.adopted > minZeroHeightAdopted + i*10)\n    //       .filter((item) => item.block.adopted <= minZeroHeightAdopted + (i+1)*10)\n    //       .map((item, index) => {\n    //         blocksQty += 1;\n    //       }\n    //     )\n    //     zeroData.push(blocksQty)\n    //   }\n    // }\n    \n\n    // const zeroHeight = this.state.emulation ? {\n    //   labels: Array.apply(null, {length: (diff/10)+4}).map(Number.call, Number),\n    //   datasets: [\n    //     {\n    //       fillColor: \"rgba(151,187,205,0.2)\",\n    //       strokeColor: \"rgba(151,187,205,1)\",\n    //       pointColor: \"rgba(151,187,205,1)\",\n    //       pointStrokeColor: \"#fff\",\n    //       pointHighlightFill: \"#fff\",\n    //       pointHighlightStroke: \"rgba(151,187,205,1)\",\n    //       data: zeroData\n    //     }\n    //   ]\n    // } : null\n\n\n    let gHeightData = [[\"Height\",\"Blocks\", {role:'style'}]]\n    let gLineData = [['Time Diff', 'Height 0']]\n    \n    if (this.state.emulation) {\n      for (let i = 0; i < this.state.emulation.iterations; i += 1) {\n        gHeightData.push(['Height ' + i, 0, 'stroke-color: #0D47A1; stroke-opacity: 0.6; stroke-width: 1; fill-color: #2196F3; fill-opacity: 0.2'])\n        // gLineData[0].push('Height ' + i);\n      }\n    }\n\n    \n    gHeightData && this.state.blocks.list ? \n      this.state.blocks.list\n        .filter((item) => item.block.adopted <= this.state.slider.value)\n        .map((item, index) => {\n          gHeightData[item.block.height+1][1] += 1\n          if (item.block.height > 0) {\n            gHeightData[item.block.height][1] -= 1\n          }\n    }) : null\n\n    // console.log(gLineData);\n    // const diff = this.state.slider.max-this.state.slider.min;\n\n    if (this.state.adoptions.list) {\n      for (let i = 0; i < this.state.adoptions.list.length; i +=1) {\n        let blocksQty = 0;\n        for (let i = 0; i < (this.state.maxLocalDiff)/10; i += 1) {\n          let row = [i*10];\n            this.state.blocks.list\n              .filter((item) => item.block.adopted >= this.state.adoptions.list[i])\n              .filter((item) => item.block.adopted > this.state.slider.min + i*10)\n              .filter((item) => item.block.adopted <= this.state.slider.min + (i+1)*10)\n              .map((item, index) => {\n                blocksQty += 1;\n              })\n              \n            console.log(blocksQty);\n            \n            row.push(blocksQty);\n          gLineData.push(row);\n        }\n      }\n    }\n    \n\n    // console.log(gLineData);\n    \n\n\n    return (\n      <Layout>\n        <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\n        \n        <Row>\n          <Col>\n            <h1>Emulation map</h1>\n            {\n              this.state.nodesLoading === false ? null : (\n                <div className={'nodesLoadingInfo'}>\n                  <Alert bsStyle=\"warning\">\n                    Please wait. Loading nodes list in progress...\n                  </Alert>\n                </div>\n              )\n            }\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={8}>\n            {\n              this.state.blocks.list === false || this.state.blocks.list.length === 0 ? null : (\n                <Slider\n                  value={this.state.slider.value}\n                  orientation=\"horizontal\"\n                  onChange={this.onSlide}\n                  min={this.state.slider.min}\n                  max={this.state.slider.max}\n                  step={this.state.slider.step}\n                  format={this.asd}\n                />\n              )\n            }\n          </Col>\n          <Col lg={4} style={{paddingBottom: '2em'}}>\n            <ButtonGroup bsSize=\"large\" style={{marginRight: 20}}>\n              <DropdownButton \n                title={<Glyphicon glyph=\"time\"><span style={{marginLeft: 20}}>{this.state.timeScale} ms</span></Glyphicon>} \n                bsSize=\"large\" \n                onSelect={this.updateTimeScale}\n                id=\"time-scale-dropdown\"\n              >\n                <MenuItem eventKey={10}>10 ms</MenuItem>\n                <MenuItem eventKey={50}>50 ms</MenuItem>\n                <MenuItem eventKey={100}>100 ms</MenuItem>\n                <MenuItem eventKey={200}>200 ms</MenuItem>\n                <MenuItem eventKey={500}>500 ms</MenuItem>\n                <MenuItem eventKey={1000}>1000 ms</MenuItem>                \n              </DropdownButton>\n              <Button onClick={this.subTimeClick}><Glyphicon glyph=\"minus\" /></Button>\n              <Button onClick={this.addTimeClick}><Glyphicon glyph=\"plus\" /></Button>\n            </ButtonGroup>\n\n            <ButtonGroup bsSize=\"large\" >\n              <Button onClick={this.subTimeClick} onClick={this.toStart}><Glyphicon glyph=\"step-backward\" /></Button>\n              <Button onClick={this.addTimeClick} onClick={this.togglePlaying}><Glyphicon glyph={this.state.isPlaying ? 'pause' : 'play'} /></Button>\n              <Button onClick={this.addTimeClick} onClick={this.toggleRepeaed} active={this.state.repeated}><Glyphicon glyph=\"repeat\" /></Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={8}>\n            <Gmaps\n              width={'100%'}\n              height={'600px'}\n              lat={20}\n              lng={20}\n              zoom={2}\n              loadingMessage={'Loading...'}\n              params={params}\n              onMapCreated={this.onMapCreated}\n            >\n              {markers}\n            </Gmaps>\n          </Col>\n          <Col lg={4} >\n            {\n              this.state.emulation ? (\n                <Chart\n                  chartType=\"ColumnChart\"\n                  data={gHeightData}\n                  options={{\n                    title:\"Blocks by height\",\n                    bar:{\n                      groupWidth:\"90%\"\n                    },\n                    chartArea: {\n                      width: '80%', \n                      height: '80%'\n                    },\n                    legend:{\n                      position:\"top\"\n                    },\n                    animation:{\n                      duration: 400,\n                      easing: 'out',\n                    },\n                    vAxis: {minValue: this.state.emulation.nodesQty}\n                  }}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              ) : null\n            }\n            \n            {\n              this.state.emulation ? (\n                <Chart\n                  chartType=\"LineChart\"\n                  data={gLineData}\n                  options={{\n                    \n                    title:\"Block adoption by height\",\n                    bar:{\n                      groupWidth:\"90%\"\n                    },\n                    chartArea: {\n                      width: '90%', \n                      height: '80%'\n                    },\n                    legend:{\n                      position:\"top\"\n                    },\n                    animation:{\n                      duration: 400,\n                      easing: 'out',\n                    },\n                    hAxis:{\n                      title:\"Time\"\n                    },\n                    vAxis:{\n                      title:\"blocks\",\n                      minValue: this.state.emulation.nodesQty\n                    }\n                  }}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              ) : null\n            }\n            \n\n            {/* {\n              this.state.emulation ? (\n                <div>\n                  <h2>Blocks adoption</h2>\n                  <LineChart \n                    data={zeroHeight} \n                    width={400} \n                    height={250}\n                    options={{\n                      legend: {\n                        display: false\n                      }\n                    }}\n                  />\n                </div>\n              ) : 'Loading chart...'\n            } */}\n            \n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            \n          </Col>\n        </Row>\n        <style jsx>{`\n          @import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,700');\n          font-family: 'Open Sans', sans-serif;\n          color: #333;\n\n          h1 {\n            font-size: 4em;\n            font-weight: 400;\n            margin: 1em 0 1em 0 ;\n          }\n          \n          h2 {\n            margin: 0 0 1em 0;\n            font-weight: 300;\n          }\n\n          h3 {\n            margin-top: 1em;\n          }\n\n          div.nodesLoadingInfo {\n            position: absolute;\n            bottom: 2em;\n            right: 2em;\n            width: 240px;\n          }\n\n          .rangeslider__handle-tooltip {\n            width: 200px!important;\n          }\n          \n        `}</style>\n      </Layout>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./pages/emulation.js"],"sourceRoot":""}